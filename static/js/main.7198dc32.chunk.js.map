{"version":3,"sources":["components/Nav.js","API/SandR.js","API/HealthBody.js","API/NatureEnv.js","API/SchoolLife.js","API/Travel.js","API/Listpage.js","API/AllPurpose.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navStyle","color","className","style","to","SandR","useState","tasks","setTasks","id","title","editedTask","setEditedTask","useEffect","axios","get","headers","then","res","data","type","name","value","onChange","evt","target","placeholder","required","onClick","task","put","map","post","newTask","delete","filter","HealthBody","NatureEnv","SchoolLife","Travel","Listpage","Allpurpose","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7198dc32.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Nav = () => {\n    const navStyle = {\n        color:\"white\"\n    };\n\n    return (\n        <div className=\"home\">\n        <nav>\n\n            <ul className='nav-links'>\n                <Link style={navStyle} to='/home'>\n                <li>HOME</li>\n                </Link>\n                <Link style={navStyle} to='leisure'>\n\n                </Link>\n            </ul>\n            \n        </nav>\n        \n             　\n        \n\n        </div>\n    )\n}\n\nexport default Nav\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\n\n\n\nconst SandR = () => {\n\n    const [tasks, setTasks] = useState([])\n    const [editedTask, setEditedTask] = useState({id:'',title:''})\n \n\n    useEffect(()=> {\n        axios.get(\"http://127.0.0.1:8000/api/socialrelationship/\", {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }\n        })\n        .then(res => {setTasks(res.data)})\n    },[])\n\n    const deleteTask = (id) => {\n        axios.delete(`http://127.0.0.1:8000/api/socialrelationship/${id}/`, {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.filter(task => task.id !== id)); })\n    }\n\n    const newTask = (task) => {\n\n        const data = {\n            title: task.title\n        }\n        axios.post(\"http://127.0.0.1:8000/api/socialrelationship/\", data,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks([...tasks, res.data]); setEditedTask({id:'', title:''})\n        })\n    }\n\n    const editTask = (task) => {\n\n        axios.put(`http://127.0.0.1:8000/api/socialrelationship/${task.id}/`, task,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n                setEditedTask({id:'', title:''})\n        })\n    }\n\n    const handleInputChange = () => evt => {\n        const value = evt.target.value;\n        const name = evt.target.name;\n        setEditedTask({...editedTask, [name]:value})\n    }\n\n\n    return (\n        <div>\n           \n\n        <h1>人間関係・社交</h1><br/>\n        \n        <br/>\n\n        <form className='search-form'>\n        {/* <input className=\"search-bar\" type=\"text\" value={id} onChange={evt=>{setId(evt.target.value)}}/>\n        <button className=\"search-button\" type='button' onClick={()=>getTask()}>検索</button>\n        \n        \n        <h3>{selectedTask.title}</h3> */}\n        <br/>\n        <input className=\"search-bar\" type=\"text\" name='title'\n        value = {editedTask.title}\n        onChange ={handleInputChange()}\n        placeholder=\"add new phrase\" required/>\n        { editedTask.id? \n        <button className=\"search-button\" onClick={()=>editTask(editedTask)}>編集</button>:\n        <button className=\"search-button\" onClick={()=>newTask(editedTask)}>追加</button> \n         }\n         </form>\n\n        <div className=\"phrase-container\">\n        <ul className=\"phrase-list\">\n            {\n                \n               \n                tasks.map(task => <li className=\"phrases\" key={task.id}><div className=\"text\">{task.title}</div>\n                <button className='edit-btn' onClick={()=>setEditedTask(task)}>\n                <i className='fas fa-pen'></i>\n               </button>\n                <button className='trash-btn' onClick={()=>deleteTask(task.id)}>\n                    <i className='fas fa-trash-alt'></i>\n                </button>\n                \n                </li>)\n            }\n        </ul>\n        </div>\n\n    </div>\n    )\n}\n\n\nexport default SandR\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst HealthBody = () => {\n   \n    const [tasks, setTasks] = useState([])\n\n    const [editedTask, setEditedTask] = useState({id:'',title:''})\n\n    useEffect(()=> {\n        axios.get(\"http://127.0.0.1:8000/api/healthbody/\", {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }\n        })\n        .then(res => {setTasks(res.data)})\n    },[])\n\n    const deleteTask = (id) => {\n        axios.delete(`http://127.0.0.1:8000/api/healthbody/${id}/`, {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.filter(task => task.id !== id));})\n    }\n\n    const newTask = (task) => {\n\n        const data = {\n            title: task.title\n        }\n        axios.post(\"http://127.0.0.1:8000/api/healthbody/\", data,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks([...tasks, res.data]); setEditedTask({id:'', title:''})\n        })\n    }\n\n    const editTask = (task) => {\n\n        axios.put(`http://127.0.0.1:8000/api/healthbody/${task.id}/`, task,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n                setEditedTask({id:'', title:''})\n        })\n    }\n\n    const handleInputChange = () => evt => {\n        const value = evt.target.value;\n        const name = evt.target.name;\n        setEditedTask({...editedTask, [name]:value})\n    }\n\n    return (\n        <div>\n           \n\n            <h1>健康</h1><br/>\n            \n            <br/>\n            <form className='search-form'>\n            {/* <input className=\"search-bar\" type=\"text\" value={id} onChange={evt=>{setId(evt.target.value)}}/>\n            <button className=\"search-button\" type='button' onClick={()=>getTask()}>検索</button>\n            \n            \n            <h3>{selectedTask.title}</h3> */}\n            <br/>\n            <input className=\"search-bar\" type=\"text\" name='title'\n        value = {editedTask.title}\n        onChange ={handleInputChange()}\n        placeholder=\"add new phrase\" required/>\n        { editedTask.id? \n        <button className=\"search-button\" onClick={()=>editTask(editedTask)}>編集</button>:\n        <button className=\"search-button\" onClick={()=>newTask(editedTask)}>追加</button> \n         }\n         </form>\n\n        <div className=\"phrase-container\">\n        <ul className=\"phrase-list\">\n            {\n                \n               \n                tasks.map(task => <li className=\"phrases\" key={task.id}><div className=\"text\">{task.title}</div>\n                <button className='edit-btn' onClick={()=>setEditedTask(task)}>\n                <i className='fas fa-pen'></i>\n               </button>\n                <button className='trash-btn' onClick={()=>deleteTask(task.id)}>\n                    <i className='fas fa-trash-alt'></i>\n                </button>\n                \n                </li>)\n            }\n        </ul>\n        </div>\n\n    </div>\n    )\n}\n\n\nexport default HealthBody\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst NatureEnv = () => {\n    const [tasks, setTasks] = useState([])\n    const [editedTask, setEditedTask] = useState({id:'',title:''})\n\n    useEffect(()=> {\n        axios.get(\"http://127.0.0.1:8000/api/nature/\", {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }\n        })\n        .then(res => {setTasks(res.data)})\n    },[])\n\n\n    const deleteTask = (id) => {\n        axios.delete(`http://127.0.0.1:8000/api/nature/${id}/`, {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.filter(task => task.id !== id)); })\n    }\n\n    const newTask = (task) => {\n\n        const data = {\n            title: task.title\n        }\n        axios.post(\"http://127.0.0.1:8000/api/nature/\", data,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks([...tasks, res.data]); setEditedTask({id:'', title:''})\n        })\n    }\n\n    const editTask = (task) => {\n\n        axios.put(`http://127.0.0.1:8000/api/nature/${task.id}/`, task,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n                setEditedTask({id:'', title:''})\n        })\n    }\n\n    const handleInputChange = () => evt => {\n        const value = evt.target.value;\n        const name = evt.target.name;\n        setEditedTask({...editedTask, [name]:value})\n    }\n\n    return (\n        <div>\n           \n\n            <h1>動物・気候・公害</h1><br/>\n            \n            <br/>\n            <form className='search-form'>\n            {/* <input className=\"search-bar\" type=\"text\" value={id} onChange={evt=>{setId(evt.target.value)}}/>\n            <button className=\"search-button\" type='button' onClick={()=>getTask()}>検索</button>\n            \n            \n            <h3>{selectedTask.title}</h3> */}\n            <br/>\n            <input className=\"search-bar\" type=\"text\" name='title'\n        value = {editedTask.title}\n        onChange ={handleInputChange()}\n        placeholder=\"add new phrase\" required/>\n        { editedTask.id? \n        <button className=\"search-button\" onClick={()=>editTask(editedTask)}>編集</button>:\n        <button className=\"search-button\" onClick={()=>newTask(editedTask)}>追加</button> \n         }\n         </form>\n\n        <div className=\"phrase-container\">\n        <ul className=\"phrase-list\">\n            {\n                \n               \n                tasks.map(task => <li className=\"phrases\" key={task.id}><div className=\"text\">{task.title}</div>\n                <button className='edit-btn' onClick={()=>setEditedTask(task)}>\n                <i className='fas fa-pen'></i>\n               </button>\n                <button className='trash-btn' onClick={()=>deleteTask(task.id)}>\n                    <i className='fas fa-trash-alt'></i>\n                </button>\n                \n                </li>)\n            }\n        </ul>\n        </div>\n\n    </div>\n    )\n}\nexport default NatureEnv\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst SchoolLife = () => {\n    const [tasks, setTasks] = useState([])\n    const [editedTask, setEditedTask] = useState({id:'',title:''})\n\n    useEffect(()=> {\n        axios.get(\"http://127.0.0.1:8000/api/schoolwork/\", {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }\n        })\n        .then(res => {setTasks(res.data)})\n    },[])\n\n    const deleteTask = (id) => {\n        axios.delete(`http://127.0.0.1:8000/api/schoolwork/${id}/`, {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.filter(task => task.id !== id));})\n    }\n\n    const newTask = (task) => {\n\n        const data = {\n            title: task.title\n        }\n        axios.post(\"http://127.0.0.1:8000/api/schoolwork/\", data,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks([...tasks, res.data]); setEditedTask({id:'', title:''})\n        })\n    }\n\n    const editTask = (task) => {\n\n        axios.put(`http://127.0.0.1:8000/api/schoolwork/${task.id}/`, task,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n                setEditedTask({id:'', title:''})\n        })\n    }\n\n    const handleInputChange = () => evt => {\n        const value = evt.target.value;\n        const name = evt.target.name;\n        setEditedTask({...editedTask, [name]:value})\n    }\n\n    return (\n        <div>\n           \n\n        <h1>学校生活・職場</h1><br/>\n        \n        <br/>\n        <form className='search-form'>\n        {/* <input className=\"search-bar\" type=\"text\" value={id} onChange={evt=>{setId(evt.target.value)}}/>\n        <button className=\"search-button\" type='button' onClick={()=>getTask()}>検索</button>\n        \n        \n        <h3>{selectedTask.title}</h3> */}\n        <br/>\n        <input className=\"search-bar\" type=\"text\" name='title'\n        value = {editedTask.title}\n        onChange ={handleInputChange()}\n        placeholder=\"add new phrase\" required/>\n        { editedTask.id? \n        <button className=\"search-button\" onClick={()=>editTask(editedTask)}>編集</button>:\n        <button className=\"search-button\" onClick={()=>newTask(editedTask)}>追加</button> \n         }\n         </form>\n\n        <div className=\"phrase-container\">\n        <ul className=\"phrase-list\">\n            {\n                \n               \n                tasks.map(task => <li className=\"phrases\" key={task.id}><div className=\"text\">{task.title}</div>\n                <button className='edit-btn' onClick={()=>setEditedTask(task)}>\n                <i className='fas fa-pen'></i>\n               </button>\n                <button className='trash-btn' onClick={()=>deleteTask(task.id)}>\n                    <i className='fas fa-trash-alt'></i>\n                </button>\n                \n                </li>)\n            }\n        </ul>\n        </div>\n\n    </div>\n    )\n}\n\nexport default SchoolLife\n","import React,{useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Travel = () => {\n\n    const [tasks, setTasks] = useState([])\n    const [editedTask, setEditedTask] = useState({id:'',title:''})\n\n    useEffect(()=> {\n        axios.get(\"http://127.0.0.1:8000/api/travel/\", {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }\n        })\n        .then(res => {setTasks(res.data)})\n    },[])\n\n\n    const deleteTask = (id) => {\n        axios.delete(`http://127.0.0.1:8000/api/travel/${id}/`, {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.filter(task => task.id !== id));})\n    }\n\n    const newTask = (task) => {\n\n        const data = {\n            title: task.title\n        }\n        axios.post(\"http://127.0.0.1:8000/api/travel/\", data,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks([...tasks, res.data]); setEditedTask({id:'', title:''})\n        })\n    }\n\n    const editTask = (task) => {\n\n        axios.put(`http://127.0.0.1:8000/api/travel/${task.id}/`, task,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n                setEditedTask({id:'', title:''})\n        })\n    }\n\n    const handleInputChange = () => evt => {\n        const value = evt.target.value;\n        const name = evt.target.name;\n        setEditedTask({...editedTask, [name]:value})\n    }\n\n    return (\n        <div>\n           \n\n            <h1>旅行・海外</h1><br/>\n            \n            <br/>\n            <form className='search-form'>\n            {/* <input className=\"search-bar\" type=\"text\" value={id} onChange={evt=>{setId(evt.target.value)}}/>\n            <button className=\"search-button\" type='button' onClick={()=>getTask()}>検索</button>\n            \n            \n            <h3>{selectedTask.title}</h3> */}\n            <br/>\n            <input className=\"search-bar\" type=\"text\" name='title'\n        value = {editedTask.title}\n        onChange ={handleInputChange()}\n        placeholder=\"add new phrase\" required/>\n        { editedTask.id? \n        <button className=\"search-button\" onClick={()=>editTask(editedTask)}>編集</button>:\n        <button className=\"search-button\" onClick={()=>newTask(editedTask)}>追加</button> \n         }\n         </form>\n\n        <div className=\"phrase-container\">\n        <ul className=\"phrase-list\">\n            {\n                \n               \n                tasks.map(task => <li className=\"phrases\" key={task.id}><div className=\"text\">{task.title}</div>\n                <button className='edit-btn' onClick={()=>setEditedTask(task)}>\n                <i className='fas fa-pen'></i>\n               </button>\n                <button className='trash-btn' onClick={()=>deleteTask(task.id)}>\n                    <i className='fas fa-trash-alt'></i>\n                </button>\n                \n                </li>)\n            }\n        </ul>\n        </div>\n\n    </div>\n    )\n}\n\nexport default Travel\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\nconst Listpage = () => {\n    return (\n        <div className=\"list-container\">\n         <h1>英語フレーズ管理アプリ</h1>\n        <ul  className=\"listpage\">\n        <Link   to='/socializingandrelationship'>\n        <li className=\"box\">人間関係・社交</li>\n        </Link>\n        <Link  to='/travel'>\n        <li className=\"box\">旅行・海外</li>\n        </Link>\n        <Link  to='/schoollife'>\n        <li className=\"box\">学校生活・職場</li>\n        </Link>\n        <Link  to='/healthandbody'>\n        <li className=\"box\">健康・食・体</li>\n        </Link>\n        <Link  to='/natureandenvironment'>\n        <li className=\"box\">気候・動物・公害</li>\n        </Link>\n        <Link  to='/allpurpose'>\n        <li className=\"box\">その他</li>\n        </Link>\n        </ul>\n        </div>\n    )\n}\n\nexport default Listpage\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Allpurpose = () => {\n\n    const [tasks, setTasks] = useState([])\n    const [editedTask, setEditedTask] = useState({id:'',title:''})\n\n    useEffect(()=> {\n        axios.get(\"http://127.0.0.1:8000/api/tasks/\", {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }\n        })\n        .then(res => {setTasks(res.data)})\n    },[])\n\n\n    const deleteTask = (id) => {\n        axios.delete(`http://127.0.0.1:8000/api/tasks/${id}/`, {\n            headers:{\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.filter(task => task.id !== id));})\n    }\n\n    const newTask = (task) => {\n\n        const data = {\n            title: task.title\n        }\n        axios.post(\"http://127.0.0.1:8000/api/tasks/\", data,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks([...tasks, res.data]); setEditedTask({id:'', title:''})\n        })\n    }\n\n    const editTask = (task) => {\n\n        axios.put(`http://127.0.0.1:8000/api/tasks/${task.id}/`, task,{\n            headers:{\n                'Content-Type' : 'application/json',\n                'Authorization': 'Token 360d3fad4e80a1c1aadc236d2288234e21b0a01c'\n            }})\n            .then(res => {setTasks(tasks.map(task => (task.id === editedTask.id ? res.data : task)));\n                setEditedTask({id:'', title:''})\n        })\n    }\n\n    const handleInputChange = () => evt => {\n        const value = evt.target.value;\n        const name = evt.target.name;\n        setEditedTask({...editedTask, [name]:value})\n    }\n\n   \n\n\n\n    return (\n        <div>\n           \n\n        <h1>その他のフレーズ</h1><br/>\n        \n        <br/>\n        <form className='search-form'>\n   \n        <br/>\n        <input className=\"search-bar\" type=\"text\" name='title'\n        value = {editedTask.title}\n        onChange ={handleInputChange()}\n        placeholder=\"add new phrase\" required/>\n        { editedTask.id? \n        <button className=\"search-button\" onClick={()=>editTask(editedTask)}>編集</button>:\n        <button className=\"search-button\" onClick={()=>newTask(editedTask)}>追加</button> \n         }\n         </form>\n\n        <div className=\"phrase-container\">\n        <ul className=\"phrase-list\">\n            {\n                \n               \n                tasks.map(task => <li className=\"phrases\" key={task.id}><div className=\"text\">{task.title}</div>\n                <button className='edit-btn' onClick={()=>setEditedTask(task)}>\n                <i className='fas fa-pen'></i>\n               </button>\n                <button className='trash-btn' onClick={()=>deleteTask(task.id)}>\n                    <i className='fas fa-trash-alt'></i>\n                </button>\n                \n                </li>)\n            }\n        </ul>\n        </div>\n\n    </div>\n    )\n}\n\nexport default Allpurpose\n","import './App.css';\nimport Nav from './components/Nav';\nimport SandR from './API/SandR';\nimport HealthBody from './API/HealthBody';\nimport NatureEnv from './API/NatureEnv';\nimport SchoolLife from './API/SchoolLife';\nimport Travel from './API/Travel';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Listpage from './API/Listpage';\nimport Allpurpose from './API/AllPurpose';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n      <Route path='/home' component={Listpage} />\n      <Route path=\"/list\" component={Allpurpose}/>\n      <Route path=\"/socializingandrelationship\" component={SandR}/>\n      <Route path=\"/allpurpose\" component={Allpurpose}/>\n      <Route path=\"/healthandbody\" component={HealthBody}/>\n      <Route path=\"/natureandenvironment\" component={NatureEnv}/>\n      <Route path=\"/schoollife\" component={SchoolLife}/>\n      <Route path=\"/travel\" component={Travel}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}